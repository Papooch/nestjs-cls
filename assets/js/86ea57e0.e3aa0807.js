"use strict";(self.webpackChunknestjs_cls_docs=self.webpackChunknestjs_cls_docs||[]).push([[8052],{3428:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"introduction/index","title":"Introduction","description":"A continuation-local\\\\* storage module compatible with NestJS\' dependency injection based on Node\'s AsyncLocalStorage.","source":"@site/docs/01_introduction/index.md","sourceDirName":"01_introduction","slug":"/","permalink":"/nestjs-cls/","draft":false,"unlisted":false,"editUrl":"https://github.com/Papooch/nestjs-cls/tree/main/docs/docs/01_introduction/index.md","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"slug":"/","sidebar_position":0,"title":"Introduction"},"sidebar":"documentationSidebar","next":{"title":"Installation","permalink":"/nestjs-cls/introduction/installation"}}');var i=n(2540),o=n(3023);const a={slug:"/",sidebar_position:0,title:"Introduction"},r="NestJS CLS",c={},l=[{value:"Use cases",id:"use-cases",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Highlights",id:"highlights",level:2}];function d(e){const s={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"nestjs-cls",children:"NestJS CLS"})}),"\n",(0,i.jsxs)(s.p,{children:["A continuation-local* storage module compatible with ",(0,i.jsx)(s.a,{href:"https://nestjs.com/",children:"NestJS"}),"' dependency injection based on Node's ",(0,i.jsx)(s.a,{href:"https://nodejs.org/api/async_context.html#async_context_class_asynclocalstorage",children:"AsyncLocalStorage"}),"."]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.em,{children:"Continuation-local storage allows to store state and propagate it throughout callbacks and promise chains. It allows storing data throughout the lifetime of a web request or any other asynchronous duration. It is similar to thread-local storage in other languages."})}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"use-cases",children:"Use cases"}),"\n",(0,i.jsx)(s.p,{children:"Some common use cases that this library enables include:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Tracking the Request ID and other metadata for logging purposes"}),"\n",(0,i.jsx)(s.li,{children:"Keeping track of the user throughout the whole request"}),"\n",(0,i.jsx)(s.li,{children:"Making the dynamic Tenant database connection available everywhere in multi-tenant apps"}),"\n",(0,i.jsx)(s.li,{children:"Propagating the authentication level or role to restrict access to resources"}),"\n",(0,i.jsxs)(s.li,{children:["Seamlessly propagating database transaction across services without breaking encapsulation and isolation by explicitly passing it around (",(0,i.jsxs)(s.strong,{children:["Now available with the ",(0,i.jsx)(s.a,{href:"/nestjs-cls/plugins/available-plugins/transactional/",children:"Transactional plugin"})]}),")"]}),"\n",(0,i.jsx)(s.li,{children:'Using "request" context in cases where actual REQUEST-scoped providers are not supported (passport strategies, cron controllers, websocket gateways, ...)'}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["Most of these are to some extent solvable using ",(0,i.jsx)(s.em,{children:"REQUEST-scoped"})," providers or passing the context as a parameter, but these solutions are often clunky and come with a whole lot of other issues."]}),"\n",(0,i.jsx)(s.admonition,{type:"info",children:(0,i.jsxs)(s.p,{children:["* The name comes from the original implementation based on ",(0,i.jsx)(s.code,{children:"cls-hooked"}),", which was since replaced by the native ",(0,i.jsx)(s.code,{children:"AsyncLocalStorage"}),"."]})}),"\n",(0,i.jsx)(s.h2,{id:"motivation",children:"Motivation"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"NestJS is an amazing framework, but in the plethora of awesome built-in features, I still missed one"}),"."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsxs)(s.em,{children:["I created this library to solve a specific use case, which was limiting access to only those records which had the same TenantId as the request's user in a central manner. The repository code automatically added a ",(0,i.jsx)(s.code,{children:"WHERE"})," clause to each query, which made sure that other developers couldn't accidentally mix tenant data (all tenants' data were held in the same database) without extra effort."]})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsxs)(s.em,{children:[(0,i.jsx)(s.code,{children:"AsyncLocalStorage"})," is still fairly new and not many people know of its existence and benefits. Here's a nice ",(0,i.jsx)(s.a,{href:"https://youtu.be/R2RMGQhWyCk?t=9742",children:"talk from NodeConf"})," about the history. I've invested a great deal of my personal time in making the use of it as pleasant as possible."]})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsxs)(s.em,{children:["While the use of ",(0,i.jsx)(s.code,{children:"async_hooks"})," is sometimes criticized for ",(0,i.jsx)(s.a,{href:"https://gist.github.com/Aschen/5cc1f3f3b58f1e284b670b83bb53da7d",children:"making Node run slower"}),", in my experience, the introduced overhead is negligible compared to any IO operation (like a DB or external API call). If you want speed, use a compiled language."]})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsxs)(s.em,{children:["Also, if you use some tracing library (like ",(0,i.jsx)(s.code,{children:"otel"}),"), it most likely already uses ",(0,i.jsx)(s.code,{children:"async_hooks"})," under the hood, so you might as well use it to your advantage."]})}),"\n",(0,i.jsx)(s.h2,{id:"highlights",children:"Highlights"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"New"})," Version ",(0,i.jsx)(s.code,{children:"5.0"})," adds support for NestJS v11 (See ",(0,i.jsx)(s.a,{href:"/nestjs-cls/migration-guide/v4x-v5x",children:"5.x Migration guide"})," for breaking changes and the ",(0,i.jsx)(s.a,{href:"/nestjs-cls/considerations/compatibility#nestjs-related-versions-compatibility-matrix",children:"Version compatibility matrix"})," when performing an update)."]}),"\n"]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:["Version ",(0,i.jsx)(s.code,{children:"4.0"})," brings support for ",(0,i.jsx)(s.a,{href:"/nestjs-cls/plugins/",children:"Plugins"})," which enable pre-built integrations with other libraries and frameworks. (See ",(0,i.jsx)(s.a,{href:"/nestjs-cls/migration-guide/v3x-v4x",children:"4.x Migration guide"})," for breaking changes)."]}),"\n"]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:["Version ",(0,i.jsx)(s.code,{children:"3.0"})," introduces ",(0,i.jsx)(s.a,{href:"/nestjs-cls/features-and-use-cases/proxy-providers",children:(0,i.jsx)(s.em,{children:"Proxy Providers"})})," as an alternative to the imperative API. (Minor breaking changes were introduced, see ",(0,i.jsx)(s.a,{href:"/nestjs-cls/migration-guide/v2x-v3x",children:"3.x Migration guide"}),")."]}),"\n"]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:["Version ",(0,i.jsx)(s.code,{children:"2.0"})," brings advanced ",(0,i.jsx)(s.a,{href:"/nestjs-cls/features-and-use-cases/type-safety-and-type-inference",children:"type safety and type inference"}),". However, it requires features from ",(0,i.jsx)(s.code,{children:"typescript >= 4.4"})," - Namely allowing ",(0,i.jsx)(s.code,{children:"symbol"})," members in interfaces. If you can't upgrade but still want to use this library, install version ",(0,i.jsx)(s.code,{children:"1.6.2"}),", which lacks the typing features."]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},3023:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>r});var t=n(3696);const i={},o=t.createContext(i);function a(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);
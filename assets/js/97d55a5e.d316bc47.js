"use strict";(self.webpackChunknestjs_cls_docs=self.webpackChunknestjs_cls_docs||[]).push([[578],{1805:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>c,default:()=>a,frontMatter:()=>t,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"api/module-options","title":"Module Options","description":"forRoot(Async)","source":"@site/docs/04_api/02_module-options.md","sourceDirName":"04_api","slug":"/api/module-options","permalink":"/nestjs-cls/api/module-options","draft":false,"unlisted":false,"editUrl":"https://github.com/Papooch/nestjs-cls/tree/main/docs/docs/04_api/02_module-options.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"Service Interface","permalink":"/nestjs-cls/api/service-interface"},"next":{"title":"Considerations","permalink":"/nestjs-cls/considerations/"}}');var i=n(2540),o=n(3023);const t={},c="Module Options",l={},d=[{value:"forRoot(Async)",id:"forrootasync",level:2},{value:"registerPlugins",id:"registerplugins",level:2},{value:"forFeature(Async)",id:"forfeatureasync",level:2},{value:"Middleware &amp; Enhancer options",id:"middleware--enhancer-options",level:2}];function h(e){const s={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"module-options",children:"Module Options"})}),"\n",(0,i.jsx)(s.h2,{id:"forrootasync",children:"forRoot(Async)"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"ClsModule.forRoot()"})," method takes the following ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"ClsModuleOptions"})}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"middleware?:"})})}),(0,i.jsx)(s.code,{children:"ClsMiddlewareOptions"}),(0,i.jsx)(s.br,{}),"\n","An object with additional options for the ",(0,i.jsx)(s.code,{children:"ClsMiddleware"}),", see ",(0,i.jsx)(s.a,{href:"#middleware--enhancer-options",children:"below"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"guard?:"})})}),(0,i.jsx)(s.code,{children:"ClsGuardOptions"}),(0,i.jsx)(s.br,{}),"\n","An object with additional options for the ",(0,i.jsx)(s.code,{children:"ClsGuard"}),", see ",(0,i.jsx)(s.a,{href:"#middleware--enhancer-options",children:"below"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"interceptor?:"})})}),(0,i.jsx)(s.code,{children:"ClsInterceptorOptions"}),(0,i.jsx)(s.br,{}),"\n","An object with additional options for the ",(0,i.jsx)(s.code,{children:"ClsInterceptor"}),", see ",(0,i.jsx)(s.a,{href:"#middleware--enhancer-options",children:"below"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"global?:"})})}),(0,i.jsx)(s.code,{children:"boolean"}),"** (default ",(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"false"})}),")",(0,i.jsx)(s.br,{}),"\n","Whether to make the module global, so you do not have to import ",(0,i.jsx)(s.code,{children:"ClsModule.forFeature()"})," in other modules."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"proxyProviders?:"})})}),(0,i.jsx)(s.code,{children:"Type[]"}),(0,i.jsx)(s.br,{}),"\n","Array of ",(0,i.jsx)(s.a,{href:"/nestjs-cls/features-and-use-cases/proxy-providers",children:"Proxy Providers"})," that should be registered in the root module. Currently only accepts sync class Proxy providers, use ",(0,i.jsx)(s.code,{children:"ClsModule.forFeatureAsync()"})," for more complex use-cases."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:(0,i.jsxs)(s.em,{children:[(0,i.jsx)(s.code,{children:"plugins?"}),":"]})})," ",(0,i.jsx)(s.code,{children:"ClsPlugin[]"}),(0,i.jsx)(s.br,{}),"\n","Array of registered plugins, see ",(0,i.jsx)(s.a,{href:"/nestjs-cls/plugins/",children:"Plugins"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"ClsModule.forRootAsync()"})," is also available. You can supply the usual ",(0,i.jsx)(s.code,{children:"imports"}),", ",(0,i.jsx)(s.code,{children:"inject"})," and ",(0,i.jsx)(s.code,{children:"useFactory"})," parameters as usual."]}),"\n",(0,i.jsx)(s.admonition,{type:"info",children:(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Please note"}),": If you intend to use multiple enhancers at the same time (e.g. initialize the CLS context in a middleware and then set some additional CLS variables in an interceptor), be aware that the only the first one in the chain will set the Request ID."]})}),"\n",(0,i.jsx)(s.h2,{id:"registerplugins",children:"registerPlugins"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"registerPlugins"})," static method accepts an array of plugins. see ",(0,i.jsx)(s.a,{href:"/nestjs-cls/plugins/",children:"Plugins"}),"."]}),"\n",(0,i.jsx)(s.h2,{id:"forfeatureasync",children:"forFeature(Async)"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"ClsModule.forFeature()"})," method can be used to register a ",(0,i.jsx)(s.a,{href:"/nestjs-cls/features-and-use-cases/proxy-providers",children:"Proxy Providers"}),". The Sync method only accepts Class Proxy providers."]}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"ClsModule.forFeatureAsync()"})," method accepts either ",(0,i.jsx)(s.code,{children:"ClsModuleProxyClassProviderOptions"})," or ",(0,i.jsx)(s.code,{children:"ClsModuleProxyFactoryProviderOptions"})," that both accept these options:"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"provide?:"})})}),(0,i.jsx)(s.code,{children:"any"}),(0,i.jsx)(s.br,{}),"\n","Custom injection token to use for the provider. In case of a class provider, this parameter is optional, as the class reference passed to ",(0,i.jsx)(s.code,{children:"useClass"})," will be used by default."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"imports?"})})}),(0,i.jsx)(s.code,{children:"any[]"}),(0,i.jsx)(s.br,{}),"\n","Optional list of imported modules that export the providers which are required for the provider."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"extraProviders?:"})})}),(0,i.jsx)(s.code,{children:"Provider[]"}),(0,i.jsx)(s.br,{}),"\n","Optional list of additional providers that should be available to the Proxy. Useful for passing configuration from a parent dynamic module."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"ClsModuleProxyClassProviderOptions"})," interface further accepts:"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"useClass:"})})}),(0,i.jsx)(s.code,{children:"Type"}),(0,i.jsx)(s.br,{}),"\n","The target class that will be used by this Proxy Provider. Make sure it is decorated with ",(0,i.jsx)(s.code,{children:"@InjectableProxy"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"ClsModuleProxyFactoryProviderOptions"})," interface further accepts:"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"inject:"})})}),(0,i.jsx)(s.code,{children:"any[]"}),(0,i.jsx)(s.br,{}),"\n","An array of injection tokens for providers used in the ",(0,i.jsx)(s.code,{children:"useFactory"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"useFactory:"})})}),(0,i.jsx)(s.code,{children:"(...args: any[]) => any"}),(0,i.jsx)(s.br,{}),"\n","Factory function that accepts an array of providers in the order of the according tokens in the ",(0,i.jsx)(s.code,{children:"inject"})," array. Returns (or resolves with) an object (or a function) that will be used by this Proxy Provider."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"type?:"})})}),(0,i.jsx)(s.code,{children:"'function' | 'object'"}),(0,i.jsx)(s.br,{}),"\n","Whether the Proxy Provider should be a function or an object. Defaults to ",(0,i.jsx)(s.code,{children:"'object'"}),". See ",(0,i.jsx)(s.a,{href:"/nestjs-cls/features-and-use-cases/proxy-providers#caveats",children:"Caveats"})," for more information."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"strict?:"})})}),(0,i.jsx)(s.code,{children:"boolean"}),(0,i.jsx)(s.br,{}),"\n","Whether to register this Proxy Provider in ",(0,i.jsx)(s.a,{href:"/nestjs-cls/features-and-use-cases/proxy-providers#strict-proxy-providers",children:"strict mode"}),". Defaults to ",(0,i.jsx)(s.code,{children:"false"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"middleware--enhancer-options",children:"Middleware & Enhancer options"}),"\n",(0,i.jsxs)(s.p,{children:["All of the ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"Cls{Middleware,Guard,Interceptor}Options"})})," take the following parameters (either in ",(0,i.jsx)(s.code,{children:"ClsModuleOptions"})," or directly when instantiating them manually):"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"mount?:"})})}),(0,i.jsx)(s.code,{children:"boolean"})," (default ",(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"false"})}),")",(0,i.jsx)(s.br,{}),"\n","Whether to automatically mount the middleware/guard/interceptor to every route (not applicable when instantiating them manually)"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"generateId?:"})})}),(0,i.jsx)(s.code,{children:"boolean"})," (default ",(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"false"})}),")",(0,i.jsx)(s.br,{}),"\n","Whether to automatically generate a request ID. It will be available under the ",(0,i.jsx)(s.code,{children:"CLS_ID"})," key."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"idGenerator?:"})})}),(0,i.jsx)(s.code,{children:"(req: Request) => string | Promise<string>"}),(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"idGenerator?:"})})}),(0,i.jsx)(s.code,{children:"(ctx: ExecutionContext) => string | Promise<string>"}),(0,i.jsx)(s.br,{}),"\n","An optional function for generating the request ID. It takes the ",(0,i.jsx)(s.code,{children:"Request"})," object (or the ",(0,i.jsx)(s.code,{children:"ExecutionContext"})," in case of a Guard or Interceptor) as an argument and (synchronously or asynchronously) returns a string. The default implementation uses ",(0,i.jsx)(s.code,{children:"Math.random()"})," to generate a string of 8 characters."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"setup?:"})})}),(0,i.jsx)(s.code,{children:"(cls: ClsService, req: Request) => void | Promise<void>;"}),(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"setup?:"})})}),(0,i.jsx)(s.code,{children:"(cls: ClsService, ctx: ExecutionContext) => void | Promise<void>;"}),(0,i.jsx)(s.br,{}),"\n","Function that executes after the CLS context had been initialised. It can be used to put additional variables in the CLS context."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"resolveProxyProviders?:"})})}),(0,i.jsx)(s.code,{children:"boolean"})," (default ",(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"true"})}),")",(0,i.jsx)(s.br,{}),"\n","Whether to automatically resolve Proxy Providers in the enhancer (if any are registered)."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"initializePlugins?:"})})}),(0,i.jsx)(s.code,{children:"boolean"})," (default ",(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"true"})}),")",(0,i.jsx)(s.br,{}),"\n","Whether to run the ",(0,i.jsx)(s.code,{children:"onClsInit"})," hook for plugins as a part of the CLS context registration (runs before ",(0,i.jsx)(s.code,{children:"resolveProxyProviders"})," just after ",(0,i.jsx)(s.code,{children:"setup"}),")."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"ClsMiddlewareOptions"})," additionally takes the following parameters:"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"saveReq?:"})})}),(0,i.jsx)(s.code,{children:"boolean"})," (default ",(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"true"})}),")",(0,i.jsx)(s.br,{}),"\n","Whether to store the ",(0,i.jsx)(s.em,{children:"Request"})," object to the context. It will be available under the ",(0,i.jsx)(s.code,{children:"CLS_REQ"})," key."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"saveRes?:"})})}),(0,i.jsx)(s.code,{children:"boolean"})," (default ",(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"false"})}),")",(0,i.jsx)(s.br,{}),"\n","Whether to store the ",(0,i.jsx)(s.em,{children:"Response"})," object to the context. It will be available under the ",(0,i.jsx)(s.code,{children:"CLS_RES"})," key"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"useEnterWith?:"})})}),(0,i.jsx)(s.code,{children:"boolean"})," (default ",(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"false"})}),")",(0,i.jsx)(s.br,{}),"\n","Set to ",(0,i.jsx)(s.code,{children:"true"})," to set up the context using a call to ",(0,i.jsx)(s.a,{href:"https://nodejs.org/api/async_context.html#async_context_asynclocalstorage_enterwith_store",children:(0,i.jsx)(s.code,{children:"AsyncLocalStorage#enterWith"})})," instead of wrapping the ",(0,i.jsx)(s.code,{children:"next()"})," call with the safer ",(0,i.jsx)(s.a,{href:"https://nodejs.org/api/async_context.html#async_context_asynclocalstorage_run_store_callback_args",children:(0,i.jsx)(s.code,{children:"AsyncLocalStorage#run"})}),". Most of the time this should not be necessary, but ",(0,i.jsx)(s.a,{href:"/nestjs-cls/considerations/compatibility#graphql",children:"some frameworks"})," have been known to lose the context with ",(0,i.jsx)(s.code,{children:"run"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"Cls{Guard,Interceptor}Options"})," additionally takes the following parameters:"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"saveCtx?:"})})}),(0,i.jsx)(s.code,{children:"boolean"})," (default ",(0,i.jsx)(s.em,{children:(0,i.jsx)(s.code,{children:"true"})}),") ",(0,i.jsxs)("small",{children:["Since ",(0,i.jsx)(s.code,{children:"v5.1.0"})]}),(0,i.jsx)(s.br,{}),"\n","Whether to store the ",(0,i.jsx)(s.em,{children:"ExecutionContext"})," object to the context. It will be available under the ",(0,i.jsx)(s.code,{children:"CLS_CTX"})," key."]}),"\n"]})]})}function a(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},3023:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>c});var r=n(3696);const i={},o=r.createContext(i);function t(e){const s=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(o.Provider,{value:s},e.children)}}}]);
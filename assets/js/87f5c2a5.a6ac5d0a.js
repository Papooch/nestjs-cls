"use strict";(self.webpackChunknestjs_cls_docs=self.webpackChunknestjs_cls_docs||[]).push([[9754],{3135:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>d,toc:()=>a});var r=t(4246),o=t(1670);const s={},i="v2.x \u2192 v3.x",d={id:"migration-guide/v2x-v3x",title:"v2.x \u2192 v3.x",description:"Root registration method renamed",source:"@site/docs/10_migration-guide/03_v2x-v3x.md",sourceDirName:"10_migration-guide",slug:"/migration-guide/v2x-v3x",permalink:"/nestjs-cls/migration-guide/v2x-v3x",draft:!1,unlisted:!1,editUrl:"https://github.com/Papooch/nestjs-cls/tree/main/docs/docs/10_migration-guide/03_v2x-v3x.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"documentationSidebar",previous:{title:"v3.x \u2192 v4.x",permalink:"/nestjs-cls/migration-guide/v3x-v4x"}},c={},a=[{value:"Root registration method renamed",id:"root-registration-method-renamed",level:2},{value:"Namespace support dropped",id:"namespace-support-dropped",level:2}];function l(e){const n={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"v2x--v3x",children:[(0,r.jsx)(n.code,{children:"v2.x"})," \u2192 ",(0,r.jsx)(n.code,{children:"v3.x"})]}),"\n",(0,r.jsx)(n.h2,{id:"root-registration-method-renamed",children:"Root registration method renamed"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The root registration method was ",(0,r.jsx)(n.em,{children:"renamed"})," from ",(0,r.jsx)(n.code,{children:"register"})," (resp. ",(0,r.jsx)(n.code,{children:"registerAsync"}),") to ",(0,r.jsx)(n.code,{children:"forRoot"})," (resp. ",(0,r.jsx)(n.code,{children:"forRootAsync"}),") to align with the convention."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-diff",children:"// highlight-start\n- ClsModule.register({\n+ ClsModule.forRoot({\n// highlight-end\n        middleware: { mount: true },\n  }),\n"})}),"\n",(0,r.jsx)(n.h2,{id:"namespace-support-dropped",children:"Namespace support dropped"}),"\n",(0,r.jsxs)(n.p,{children:["Namespace injection support with ",(0,r.jsx)(n.code,{children:"forFeature"})," was dropped entirely, and now that method is used to register ",(0,r.jsx)(n.a,{href:"/nestjs-cls/features-and-use-cases/proxy-providers",children:"Proxy Providers"}),". If you still have a use case for namespaces, you can create a namespaced ",(0,r.jsx)(n.code,{children:"ClsService"})," and use a custom provider to inject it.",(0,r.jsx)(n.br,{}),"\n","Example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"class MyContextService extends ClsService<MyStore> {}\nconst myContextService = new MyContextService(new AsyncLocalStorage());\n\n// [...]\nproviders: [\n    {\n        provide: MyContextService,\n        useValue: myContextService,\n    },\n];\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},1670:(e,n,t)=>{t.d(n,{Z:()=>d,a:()=>i});var r=t(7378);const o={},s=r.createContext(o);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);
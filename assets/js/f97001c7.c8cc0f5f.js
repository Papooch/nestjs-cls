"use strict";(self.webpackChunknestjs_cls_docs=self.webpackChunknestjs_cls_docs||[]).push([[7970],{2599:(e,n,t)=>{t.d(n,{Z:()=>l});t(7378);var a=t(624);const r={tabItem:"tabItem_wHwb"};var s=t(4246);function l(e){let{children:n,hidden:t,className:l}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.Z)(r.tabItem,l),hidden:t,children:n})}},8447:(e,n,t)=>{t.d(n,{Z:()=>j});var a=t(7378),r=t(624),s=t(9169),l=t(3620),i=t(9749),o=t(8981),c=t(56),u=t(6980);function d(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}(t);return function(e){const n=(0,c.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const r=(0,l.k6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o._X)(s),(0,a.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})}),[s,r])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,s=p(e),[l,o]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:s}))),[c,d]=m({queryString:t,groupId:r}),[g,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,s]=(0,u.Nk)(t);return[r,(0,a.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:r}),f=(()=>{const e=c??g;return h({value:e,tabValues:s})?e:null})();(0,i.Z)((()=>{f&&o(f)}),[f]);return{selectedValue:l,selectValue:(0,a.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),b(e)}),[d,b,s]),tabValues:s}}var b=t(362);const f={tabList:"tabList_J5MA",tabItem:"tabItem_l0OV"};var x=t(4246);function v(e){let{className:n,block:t,selectedValue:a,selectValue:l,tabValues:i}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.o5)(),u=e=>{const n=e.currentTarget,t=o.indexOf(n),r=i[t].value;r!==a&&(c(n),l(r))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":t},n),children:i.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>o.push(e),onKeyDown:d,onClick:u,...s,className:(0,r.Z)("tabs__item",f.tabItem,s?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function z(e){let{lazy:n,children:t,selectedValue:r}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function y(e){const n=g(e);return(0,x.jsxs)("div",{className:(0,r.Z)("tabs-container",f.tabList),children:[(0,x.jsx)(v,{...n,...e}),(0,x.jsx)(z,{...n,...e})]})}function j(e){const n=(0,b.Z)();return(0,x.jsx)(y,{...e,children:d(e.children)},String(n))}},7557:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var a=t(4246),r=t(1670),s=t(8447),l=t(2599);const i={},o="Drizzle ORM adapter",c={id:"plugins/available-plugins/transactional/drizzle-orm-adapter",title:"Drizzle ORM adapter",description:"Installation",source:"@site/docs/06_plugins/01_available-plugins/01-transactional/08-drizzle-orm-adapter.md",sourceDirName:"06_plugins/01_available-plugins/01-transactional",slug:"/plugins/available-plugins/transactional/drizzle-orm-adapter",permalink:"/nestjs-cls/plugins/available-plugins/transactional/drizzle-orm-adapter",draft:!1,unlisted:!1,editUrl:"https://github.com/Papooch/nestjs-cls/tree/main/docs/docs/06_plugins/01_available-plugins/01-transactional/08-drizzle-orm-adapter.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Mongoose adapter",permalink:"/nestjs-cls/plugins/available-plugins/transactional/mongoose-adapter"},next:{title:"Creating a custom adapter",permalink:"/nestjs-cls/plugins/available-plugins/transactional/creating-custom-adapter"}},u={},d=[{value:"Installation",id:"installation",level:2},{value:"Registration",id:"registration",level:2},{value:"Typing &amp; usage",id:"typing--usage",level:2},{value:"Example",id:"example",level:2}];function p(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"drizzle-orm-adapter",children:"Drizzle ORM adapter"}),"\n",(0,a.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsxs)(s.Z,{children:[(0,a.jsx)(l.Z,{value:"npm",label:"npm",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm install @nestjs-cls/transactional-adapter-drizzle-orm\n"})})}),(0,a.jsx)(l.Z,{value:"yarn",label:"yarn",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"yarn add @nestjs-cls/transactional-adapter-drizzle-orm\n"})})}),(0,a.jsx)(l.Z,{value:"pnpm",label:"pnpm",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pnpm add @nestjs-cls/transactional-adapter-drizzle-orm\n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"registration",children:"Registration"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"ClsModule.forRoot({\n    plugins: [\n        new ClsPluginTransactional({\n            imports: [\n              // module in which Drizzle is provided\n              DrizzleModule\n            ],\n            adapter: new TransactionalAdapterDrizzleOrm({\n                // the injection token of the Drizzle client instance\n                drizzleInstanceToken: DRIZZLE,\n            }),\n        }),\n    ],\n}),\n"})}),"\n",(0,a.jsx)(n.h2,{id:"typing--usage",children:"Typing & usage"}),"\n",(0,a.jsxs)(n.p,{children:["In Drizzle, the client type is inferred from the database type ",(0,a.jsx)(n.a,{href:"https://orm.drizzle.team/docs/connect-overview",children:(0,a.jsx)(n.em,{children:"depending on the database driver"})}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["For the typing to work properly, you need to provide the client type as the type parameter for the ",(0,a.jsx)(n.code,{children:"TransactionalAdapterDrizzleOrm"})," when injecting it."]}),"\n",(0,a.jsx)(n.p,{children:"For example, if you create a client like this:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"const drizzleClient = drizzle('<connection string>'{\n    schema: {\n        users,\n    },\n});\n"})}),"\n",(0,a.jsx)(n.p,{children:"Then create a custom adapter type based on the client type:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"type MyDrizzleAdapter = TransactionAdapterDrizzleOrm<typeof drizzleClient>;\n"})}),"\n",(0,a.jsxs)(n.p,{children:["And use it as a type parameter for ",(0,a.jsx)(n.code,{children:"TransactionHost"})," when injecting it:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"constructor(\n    private readonly txHost: TransactionHost<MyDrizzleAdapter>,\n) {}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,a.jsxs)(n.p,{children:["This example assumes usage with Postgres together with ",(0,a.jsx)(n.code,{children:"pg"})," and ",(0,a.jsx)(n.code,{children:"drizzle-orm/pg-core"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:'title="database.ts"',children:"const users = pgTable('users', {\n    id: serial('id').primaryKey(),\n    name: text().notNull(),\n    email: text().notNull(),\n});\n\nconst drizzleClient = drizzle(\n    new Pool({\n        connectionString: '<connection string>',\n        max: 2,\n    }),\n    {\n        schema: {\n            users,\n        },\n    },\n);\n\ntype DrizzleClient = typeof drizzleClient;\ntype MyDrizzleAdapter = TransactionAdapterDrizzleOrm<DrizzleClient>;\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:'title="user.service.ts"',children:"@Injectable()\nclass UserService {\n    constructor(private readonly userRepository: UserRepository) {}\n\n    @Transactional()\n    async runTransaction() {\n        // highlight-start\n        // both methods are executed in the same transaction\n        const user = await this.userRepository.createUser('John');\n        const foundUser = await this.userRepository.getUserById(user.id);\n        // highlight-end\n        assert(foundUser.id === user.id);\n    }\n}\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:'title="user.repository.ts"',children:"@Injectable()\nclass UserRepository {\n    constructor(private readonly txHost: TransactionHost<MyDrizzleAdapter>) {}\n\n    async getUserById(id: number) {\n        // highlight-start\n        // txHost.tx is typed as DrizzleClient\n        return this.tx.query.users.findFirst({\n            where: eq(users.id, id),\n        });\n        // highlight-end\n    }\n\n    async createUser(name: string) {\n        const created = await this.tx\n            .insert(users)\n            .values({\n                name: name,\n                email: `${name}@email.com`,\n            })\n            .returning()\n            .execute();\n        return created[0];\n    }\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},1670:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>l});var a=t(7378);const r={},s=a.createContext(r);function l(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunknestjs_cls_docs=self.webpackChunknestjs_cls_docs||[]).push([[3332],{4378:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var s=o(4246),n=o(1670);const i={},r="How it works",c={id:"introduction/how-it-works",title:"How it works",description:"Continuation-local storage provides a common space for storing and retrieving data throughout the life of a function/callback call chain. In NestJS, this allows for sharing request data across the lifetime of a single request - without the need for request-scoped providers. It also makes it easy to track and log request ids throughout the whole application.",source:"@site/docs/01_introduction/03_how-it-works.md",sourceDirName:"01_introduction",slug:"/introduction/how-it-works",permalink:"/nestjs-cls/introduction/how-it-works",draft:!1,unlisted:!1,editUrl:"https://github.com/Papooch/nestjs-cls/tree/main/docs/docs/01_introduction/03_how-it-works.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Quick Start",permalink:"/nestjs-cls/introduction/quick-start"},next:{title:"Setting up the CLS context",permalink:"/nestjs-cls/setting-up-cls-context/"}},a={},l=[];function d(t){const e={a:"a",code:"code",h1:"h1",p:"p",...(0,n.a)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"how-it-works",children:"How it works"}),"\n",(0,s.jsx)(e.p,{children:"Continuation-local storage provides a common space for storing and retrieving data throughout the life of a function/callback call chain. In NestJS, this allows for sharing request data across the lifetime of a single request - without the need for request-scoped providers. It also makes it easy to track and log request ids throughout the whole application."}),"\n",(0,s.jsxs)(e.p,{children:["To make CLS work, it is required to set up the CLS context first. This is done by calling ",(0,s.jsx)(e.code,{children:"cls.run()"})," (or ",(0,s.jsx)(e.code,{children:"cls.enter()"}),", see ",(0,s.jsx)(e.a,{href:"/nestjs-cls/considerations/security",children:"Security considerations"})," for more info) somewhere in the app. Once that is set up, anything that is called within the same callback chain has access to the same storage with ",(0,s.jsx)(e.code,{children:"cls.set()"})," and ",(0,s.jsx)(e.code,{children:"cls.get()"}),"."]})]})}function h(t={}){const{wrapper:e}={...(0,n.a)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(d,{...t})}):d(t)}},1670:(t,e,o)=>{o.d(e,{Z:()=>c,a:()=>r});var s=o(7378);const n={},i=s.createContext(n);function r(t){const e=s.useContext(i);return s.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:r(t.components),s.createElement(i.Provider,{value:e},t.children)}}}]);
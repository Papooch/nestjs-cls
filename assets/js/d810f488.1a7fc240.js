"use strict";(self.webpackChunknestjs_cls_docs=self.webpackChunknestjs_cls_docs||[]).push([[1350],{7471:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>a,frontMatter:()=>t,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"migration-guide/v5x-v6x","title":"v5.x \u2192 v6.x","description":"The v6 major version stabilizes the Plugin API and cleans up the proxy API on the ClsService.","source":"@site/docs/10_migration-guide/01_v5x-v6x.md","sourceDirName":"10_migration-guide","slug":"/migration-guide/v5x-v6x","permalink":"/nestjs-cls/migration-guide/v5x-v6x","draft":false,"unlisted":false,"editUrl":"https://github.com/Papooch/nestjs-cls/tree/main/docs/docs/10_migration-guide/01_v5x-v6x.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"Migration guide","permalink":"/nestjs-cls/migration-guide/"},"next":{"title":"v4.x \u2192 v5.x","permalink":"/nestjs-cls/migration-guide/v4x-v5x"}}');var i=s(2540),o=s(3023);const t={},c="v5.x \u2192 v6.x",d={},l=[{value:"Removed the <code>onClsInit</code> method in the Plugin interface",id:"removed-the-onclsinit-method-in-the-plugin-interface",level:2},{value:"Proxy provider accessors on <code>ClsService</code> moved under the <code>proxy</code> property",id:"proxy-provider-accessors-on-clsservice-moved-under-the-proxy-property",level:2},{value:"Existing plugin compatibility",id:"existing-plugin-compatibility",level:2},{value:"<code>@nestjs-cls/transactional</code>",id:"nestjs-clstransactional",level:3}];function h(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsxs)(n.h1,{id:"v5x--v6x",children:[(0,i.jsx)(n.code,{children:"v5.x"})," \u2192 ",(0,i.jsx)(n.code,{children:"v6.x"})]})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"v6"})," major version stabilizes the ",(0,i.jsx)(n.a,{href:"/nestjs-cls/plugins/",children:"Plugin API"})," and cleans up the ",(0,i.jsx)(n.code,{children:"proxy"})," API on the ",(0,i.jsx)(n.code,{children:"ClsService"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"There are no breaking changes in behavior and the core API. Apart from a few syntax changes, the migration should be straightforward."}),"\n",(0,i.jsxs)(n.h2,{id:"removed-the-onclsinit-method-in-the-plugin-interface",children:["Removed the ",(0,i.jsx)(n.code,{children:"onClsInit"})," method in the Plugin interface"]}),"\n",(0,i.jsxs)(n.p,{children:["The not very useful ",(0,i.jsx)(n.code,{children:"onClsInit"})," method was removed from the Plugin interface. It has been replaced by the ",(0,i.jsx)(n.code,{children:"beforeSetup"})," and ",(0,i.jsx)(n.code,{children:"afterSetup"})," methods provided by the special ",(0,i.jsx)(n.code,{children:"ClsPluginHooks"})," provider. See the ",(0,i.jsx)(n.a,{href:"/nestjs-cls/plugins/plugin-api",children:"Plugin API"})," for more information."]}),"\n",(0,i.jsx)(n.p,{children:"Unless you specifically created a custom plugin that used this method, you can safely ignore this change."}),"\n",(0,i.jsxs)(n.h2,{id:"proxy-provider-accessors-on-clsservice-moved-under-the-proxy-property",children:["Proxy provider accessors on ",(0,i.jsx)(n.code,{children:"ClsService"})," moved under the ",(0,i.jsx)(n.code,{children:"proxy"})," property"]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"ClsService"})," exposed a set of top-level methods to manage Proxy Providers. These methods have been moved under the ",(0,i.jsx)(n.code,{children:"proxy"})," property of the ",(0,i.jsx)(n.code,{children:"ClsService"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The following methods have been moved:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"getProxy"})," -> ",(0,i.jsx)(n.code,{children:"proxy.get"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"setProxy"})," -> ",(0,i.jsx)(n.code,{children:"proxy.set"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"resolveProxyProviders"})," -> ",(0,i.jsx)(n.code,{children:"proxy.resolve"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"e.g. in v5.x you would write:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"await this.cls.resolveProxyProviders([MyProxyProvider]);\n\nthis.cls.setProxy(MyOtherProxyProvider, new MyOtherProxyProvider(dependency));\n\nconst instance = this.cls.getProxy(SomeProxyProvider);\n"})}),"\n",(0,i.jsx)(n.p,{children:"in v6.x, this becomes:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"await this.cls.proxy.resolve([MyProxyProvider]);\n\nthis.cls.proxy.set(MyOtherProxyProvider, new MyOtherProxyProvider(dependency));\n\nconst instance = this.cls.proxy.get(SomeProxyProvider);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"existing-plugin-compatibility",children:"Existing plugin compatibility"}),"\n",(0,i.jsx)(n.h3,{id:"nestjs-clstransactional",children:(0,i.jsx)(n.code,{children:"@nestjs-cls/transactional"})}),"\n",(0,i.jsxs)(n.p,{children:["Both of these changes ",(0,i.jsx)(n.em,{children:"do affect"})," the ",(0,i.jsx)(n.code,{children:"@nestjs-cls/transactional"})," plugin. Make sure to update it to version ",(0,i.jsx)(n.code,{children:"v3.x"})," or higher."]}),"\n",(0,i.jsx)(n.p,{children:"Transactional adapter packages are not affected, but it is still recommended to keep them on the latest version."})]})}function a(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},3023:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>c});var r=s(3696);const i={},o=r.createContext(i);function t(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);